{"version":3,"sources":["auth/index.js","components/Navbar.jsx","api/index.js","components/Register.jsx","components/Login.jsx","components/Home.jsx","components/NewActivityForm.jsx","components/Activities.jsx","index.js"],"names":["storeToken","token","localStorage","setItem","JSON","stringify","getToken","parse","getItem","Navbar","isLoggedIn","setIsLoggedIn","className","to","onClick","removeItem","BASE","allActivities","a","axios","get","headers","data","addActivity","name","description","post","Authorization","registerUser","username","password","console","log","loginUser","Register","setIsLoading","useState","setUserName","setPassword","registered","setRegistered","id","onSubmit","event","preventDefault","undefined","results","user","error","message","htmlFor","type","placeholder","value","onChange","target","Login","failed","setFailed","Home","activities","setActivities","useEffect","then","res","map","activity","NewActivity","setName","setDestcription","activityList","i","length","Error","newActivity","newActivityList","alert","Activities","App","path","ReactDOM","render","document","getElementById"],"mappings":"gLAAO,SAASA,EAAWC,GACzBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAGxC,SAASK,IAER,OADgBF,KAAKG,MAAML,aAAaM,QAAQ,U,WC2BzCC,EA3BA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAC5B,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAASC,GAAG,QAAZ,kBACCH,EAAa,cAAC,IAAD,CAASG,GAAG,YAAZ,uBAA8C,KAC3DH,EAAa,cAAC,IAAD,CAASG,GAAG,cAAZ,0BAAmD,KAEjE,cAAC,IAAD,CAASA,GAAG,cAAZ,wBAECH,EACC,cAAC,IAAD,CAASG,GAAG,UAAZ,oBAEA,cAAC,IAAD,CAASA,GAAG,SAAZ,6BAEF,yBACEC,QAAS,WDVfZ,aAAaa,WAAW,SAIxBb,aAAaa,WAAW,QCShBJ,GAAc,IAJlB,mBAOS,W,uCCvBTK,EAAO,0CAEN,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAEoBC,IAAMC,IAAN,UAAaJ,EAAb,eAAgC,CACrDK,QAAS,CACP,eAAgB,sBAJjB,uBAEKC,EAFL,EAEKA,KAFL,kBAOIA,GAPJ,qG,sBAaA,SAAeC,EAAtB,oC,4CAAO,WAA2BC,EAAMC,GAAjC,mBAAAP,EAAA,6DACCjB,EAAQK,IADT,kBAGoBa,IAAMO,KAAN,UAAcV,EAAd,eAAgC,CACnDQ,KAAMA,EACNC,YAAaA,GAEhB,CAAEJ,QAAS,CACVM,cAAc,UAAD,OAAY1B,GACzB,eAAgB,sBATf,uBAGKqB,EAHL,EAGKA,KAHL,kBAYKA,GAZL,sCAcG,WAdH,0D,sBA2BA,SAAeM,EAAtB,oC,4CAAO,WAA4BC,EAAUC,GAAtC,iBAAAZ,EAAA,+EAEoBC,IAAMO,KAAN,UAAcV,EAAd,mBAAqC,CAC1Da,SAAUA,EACVC,SAAUA,IAJT,uBAEKR,EAFL,EAEKA,KAFL,kBAMIA,GANJ,sCAQHS,QAAQC,IAAI,6BART,+D,sBAaA,SAAeC,EAAtB,oC,4CAAO,WAAyBJ,EAAUC,GAAnC,iBAAAZ,EAAA,+EAEoBC,IAAMO,KAAN,UAAcV,EAAd,gBAAkC,CACvDa,SAAUA,EACVC,SAAUA,IAJT,uBAEKR,EAFL,EAEKA,KAFL,kBAMIA,GANJ,qG,sBCrDP,IA4EeY,EA5EE,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,aAAczB,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAC5C,EAAgCyB,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBQ,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAON,EAAP,KAAiBQ,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,OAAI9B,IAAe6B,EAEf,qBAAK3B,UAAU,0BAAf,uFAKKF,GAAc6B,EAEnB,qBAAK3B,UAAU,0BAAf,iCAMF,qBAAKA,UAAU,0BAAf,SACE,uBACE6B,GAAG,WACHC,SAAQ,uCAAE,WAAOC,GAAP,eAAAzB,EAAA,6DACRyB,EAAMC,iBACNT,GAAa,GAFL,kBAKgBP,EAAaC,EAAUC,GALvC,YAOee,KAFfC,EALA,QAOMC,MACV/C,EAAW8C,EAAQ7C,OACnBU,GAAc,GACd6B,GAAc,IACTT,QAAQC,IAAI,oBAAqBc,EAAQE,MAAMC,SACtDZ,EAAY,IACZC,EAAY,IAbN,kDAeNP,QAAQC,IAAI,yBACZD,QAAQC,IAAR,MAhBM,yBAkBNG,GAAa,GAlBP,6EAAF,sDAFV,UAwBE,2BAAUvB,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,WAAf,uBACA,uBACET,GAAG,WACHU,KAAK,OACLC,YAAY,iBACZC,MAAOxB,EACPyB,SAAU,SAACX,GACTN,EAAYM,EAAMY,OAAOF,aAK/B,2BAAUzC,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,WAAf,2BACA,uBACET,GAAG,WACHU,KAAK,WACLC,YAAY,iBACZC,MAAOvB,EACPwB,SAAU,SAACX,GACTL,EAAYK,EAAMY,OAAOF,aAI/B,oDCMOG,EA3ED,SAAC,GAAgD,IAA9CrB,EAA6C,EAA7CA,aAAcxB,EAA+B,EAA/BA,cAC7B,GAD4D,EAAhBD,WAE1C,OAAQ,qBAAKE,UAAU,gCAAf,+BAEV,MAAgCwB,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBQ,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAON,EAAP,KAAiBQ,EAAjB,KACA,EAA6BF,oBAAS,GAAtC,mBAAOqB,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAK9C,UAAU,gCAAf,UACE,uBACE6B,GAAG,QACHC,SAAQ,uCAAE,WAAOC,GAAP,eAAAzB,EAAA,6DACRyB,EAAMC,iBACNT,GAAa,GAFL,kBAKgBF,EAAUJ,EAAUC,GALpC,YAMce,KADdC,EALA,QAMKC,MACT/C,EAAW8C,EAAQ7C,OACnBU,GAAc,GACd+C,GAAU,IAGV3B,QAAQC,IAAI,gBAAiBc,EAAQG,SAGvCZ,EAAY,IACZC,EAAY,IAhBN,kDAmBNP,QAAQC,IAAR,MACA0B,GAAU,GACVrB,EAAY,IACZC,EAAY,IAtBN,yBAwBNH,GAAa,GAxBP,6EAAF,sDAFV,UA8BE,2BAAUvB,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,WAAf,uBACA,uBACET,GAAG,WACHU,KAAK,OACLC,YAAY,iBACZC,MAAOxB,EACPyB,SAAU,SAACX,GACTN,EAAYM,EAAMY,OAAOF,aAK/B,2BAAUzC,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,WAAf,2BACA,uBACET,GAAG,WACHU,KAAK,WACLC,YAAY,iBACZC,MAAOvB,EACPwB,SAAU,SAACX,GACTL,EAAYK,EAAMY,OAAOF,aAI9BI,EAAS,qBAAK7C,UAAU,gCAAf,0DAAoG,KAC9G,8CAEF,cAAC,IAAD,CAASC,GAAG,YAAZ,oDCpDS8C,EAnBF,WACX,MAAoCvB,mBAAS,IAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KAOA,OANAC,qBAAU,WACR7C,IAAgB8C,MAAK,SAACC,GACpBH,EAAcG,QAEf,IAGD,8BACE,6BACGJ,EAAWK,KAAI,SAACC,GAAD,OACd,6BAAuBA,EAAS1C,MAAvB0C,EAASzB,Y,QC6Cb0B,EAzDK,SAAC,GAAmC,IAAjCP,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACjC,EAAwBzB,mBAAS,IAAjC,mBAAOZ,EAAP,KAAa4C,EAAb,KACA,EAAuChC,mBAAS,IAAhD,mBAAOX,EAAP,KAAoB4C,EAApB,KAEA,OACE,uBACE3B,SAAQ,uCAAE,WAAOC,GAAP,qBAAAzB,EAAA,6DACRyB,EAAMC,iBADE,kBAGqB3B,IAHrB,OAGAqD,EAHA,OAIGC,EAAI,EAJP,YAIUA,EAAID,EAAaE,QAJ3B,oBAKMF,EAAaC,GAChB,OAAa/C,EANhB,uBAOI,IAAIiD,MAAM,2BAPd,QAImCF,IAJnC,wCAWoBhD,EAAYC,EAAMC,GAXtC,QAWAiD,EAXA,OAYAC,EAZA,sBAYsBf,GAZtB,CAYkCc,IACxCb,EAAcc,GAbR,kDAeNC,MAAM,EAAD,IAfC,0DAAF,sDADV,UAoBE,wDAEA,2BAAUhE,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,OAAf,kCACA,uBACET,GAAG,OACHU,KAAK,OACLC,YAAY,aACZC,MAAO7B,EACP8B,SAAU,SAACX,GACTyB,EAAQzB,EAAMY,OAAOF,aAK3B,2BAAUzC,UAAU,uBAApB,UACE,uBAAOsC,QAAQ,cAAf,yCACA,uBACET,GAAG,cACHU,KAAK,OACLC,YAAY,gBACZC,MAAO5B,EACP6B,SAAU,SAACX,GACT0B,EAAgB1B,EAAMY,OAAOF,aAInC,wBAAQF,KAAK,SAAb,wBC1BS0B,EAxBI,SAAC,GAAkB,IAAjBnE,EAAgB,EAAhBA,WACjB,EAAoC0B,mBAAS,IAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KAMA,OALAC,qBAAU,WACR7C,IAAgB8C,MAAK,SAACC,GACpBH,EAAcG,QAEf,IAED,gCACI,4CAIEtD,EAAa,cAAE,EAAF,CAAckD,WAAcA,EAAYC,cAAiBA,IAAkB,KAC5F,6BACGD,EAAWK,KAAI,SAACC,GAAD,OACd,6BAAuBA,EAAS1C,MAAvB0C,EAASzB,aCRxBqC,EAAM,WACV,MAAoC1C,oBAAS,GAA7C,mBAAO1B,EAAP,KAAmBC,EAAnB,KACA,EAAkCyB,oBAAS,GAA3C,mBAAkBD,GAAlB,WAEA,OACE,sBAAKM,GAAG,MAAR,UACE,+CACA,cAAC,EAAD,CAAQ9B,cAAeA,EAAeD,WAAYA,IAClD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,KAAK,YAAZ,SACE,cAAC,EAAD,CACErE,WAAYA,EACZyB,aAAcA,EACdxB,cAAeA,MAGnB,cAAC,IAAD,CAAOoE,KAAK,SAAZ,SACE,cAAC,EAAD,CACE5C,aAAcA,EACdxB,cAAeA,EACfD,WAAYA,MAIhB,cAAC,IAAD,CAAOqE,KAAK,cAAZ,SACE,cAAC,EAAD,CAAYrE,WAAYA,MAG1B,cAAC,IAAD,CAAOqE,KAAK,IAAZ,SACE,cAAC,EAAD,aAOVC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.65cc5411.chunk.js","sourcesContent":["export function storeToken(token) {\r\n  localStorage.setItem('token', JSON.stringify(token));\r\n}\r\n\r\nexport function getToken() {\r\n        const myToken = JSON.parse(localStorage.getItem('token'));\r\n        return myToken;\r\n}\r\n\r\nexport function clearCurrentToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport function clearCurrentUser() {\r\n  localStorage.removeItem('user');\r\n}\r\n\r\nexport function storeUser(user) {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n}\r\n\r\nexport function getUser() {\r\n  const myUser = JSON.parse(localStorage.getItem('user'));\r\n  return myUser;\r\n}\r\n","import React, { userState, useEffect } from \"react\";\nimport { clearCurrentUser, clearCurrentToken } from \"../auth\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = ({ isLoggedIn, setIsLoggedIn }) => {\n  return (\n    <div className=\"navbar\">\n      <NavLink to=\"/Home\">Home</NavLink>\n      {isLoggedIn ? <NavLink to=\"/routines\"> Routines</NavLink> : null}\n      {isLoggedIn ? <NavLink to=\"/myRoutines\"> My Routines</NavLink> : null}\n\n      <NavLink to=\"/Activities\">Activities</NavLink>\n\n      {isLoggedIn ? (\n        <NavLink to=\"/logout\">Logout</NavLink>\n      ) : (\n        <NavLink to=\"/login\"> Login/Register</NavLink>\n      )}\n      <button\n        onClick={() => {\n          clearCurrentToken();\n          clearCurrentUser();\n          setIsLoggedIn(false);\n        }}\n      >\n        Logout{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\r\nimport { getToken } from \"../auth\";\r\n\r\nconst BASE = \"http://fitnesstrac-kr.herokuapp.com/api\";\r\n\r\nexport async function allActivities() {\r\n  try {\r\n    const { data } = await axios.get(`${BASE}/activities`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function addActivity(name, description) {\r\n  const token = getToken();\r\n  try {\r\n    const { data } = await axios.post(`${BASE}/activities`,{\r\n        name: name,\r\n        description: description,\r\n      }, \r\n     { headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n     }});\r\n\r\n     return data;\r\n  } catch (error) {\r\n    throw error(error);\r\n  }\r\n}\r\n\r\nexport async function getUsers() {\r\n  try {\r\n    const { data } = await axios.get(`${BASE}/users`);\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function registerUser(username, password) {\r\n  try {\r\n    const { data } = await axios.post(`${BASE}/users/register`, {\r\n      username: username,\r\n      password: password,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error in api regsiterUser\");\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function loginUser(username, password) {\r\n  try {\r\n    const { data } = await axios.post(`${BASE}/users/login`, {\r\n      username: username,\r\n      password: password,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function fetchMe() {\r\n  try {\r\n    const token = getToken();\r\n    const { data } = await axios.get(`${BASE}/users/me`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function userRoutines() {\r\n  try {\r\n    const { data } = await axios.get(`${BASE}/users/:username/routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function routines() {\r\n  try {\r\n    const { data } = await axios.get(`${BASE}/routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function createRoutine(routine) {\r\n  try {\r\n    const { data } = await axios.post(`${BASE}/routines`, {\r\n      name: routine.name,\r\n      goal: routine.goal,\r\n      isPublic: routine.isPublic,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateRoutine(routine) {\r\n  try {\r\n    const { data } = await axios.patch(\r\n      `${BASE}/routines/${routine.id}`,{\r\n        \r\n          name: routine.name,\r\n          goal: routine.goal,\r\n          isPublic: routine.isPublic,\r\n        });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteRoutine(routine) {\r\n  try {\r\n    const token = getToken();\r\n    const { data } = await axios.delete(`${BASE}/routines/${routine.id}`,  {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function attachRoutineToActivity(routineId, activityId, count, duration) {\r\n  try {\r\n    const { data } = await axios.post(`${BASE}/routines/${routineId}/activities`, {\r\n      activityId: activityId,\r\n      count: count,\r\n      duration: duration,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateCountorDuration(routine_activities_id) {\r\n  try {\r\n    const { data } = await axios.patch(\r\n      `${BASE}/routine_activities/${routine_activities_id}`,\r\n      {\r\n        count: count,\r\n        duration: duration,\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteActivityFromRoutine(routine_activities_id) {\r\n  try {\r\n    const { data } = await axios.delete(\r\n      `${BASE}/routine_activities/${routine_activities_id}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { registerUser } from \"../api\";\r\nimport { storeToken } from \"../auth\";\r\n\r\nconst Register = ({ setIsLoading, isLoggedIn, setIsLoggedIn }) => {\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [registered, setRegistered] = useState(false);\r\n\r\n  if (isLoggedIn && !registered)\r\n    return (\r\n      <div className=\"register-main-container\">\r\n        You're stilled logged in! Log out before registering as a different\r\n        user.\r\n      </div>\r\n    );\r\n  else if (isLoggedIn && registered)\r\n    return (\r\n      <div className=\"register-main-container\">\r\n        Account registered!\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"register-main-container\">\r\n      <form\r\n        id=\"register\"\r\n        onSubmit={async (event) => {\r\n          event.preventDefault();\r\n          setIsLoading(true);\r\n\r\n          try {\r\n            const results = await registerUser(username, password);\r\n            //console.log(results);\r\n            if (results.user !== undefined) {\r\n              storeToken(results.token);\r\n              setIsLoggedIn(true);\r\n              setRegistered(true);\r\n            } else console.log(\"register failed: \", results.error.message);\r\n            setUserName(\"\");\r\n            setPassword(\"\");\r\n          } catch (err) {\r\n            console.log(\"Error on RegisterUser\");\r\n            console.log(err);\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        }}\r\n      >\r\n        <fieldset className=\"auth-component-input\">\r\n          <label htmlFor=\"username\">User Name</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"enter username\"\r\n            value={username}\r\n            onChange={(event) => {\r\n              setUserName(event.target.value);\r\n            }}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className=\"auth-component-input\">\r\n          <label htmlFor=\"password\">User Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"enter password\"\r\n            value={password}\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n          />\r\n        </fieldset>\r\n        <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { loginUser } from \"../api\";\r\nimport {storeToken} from \"../auth\"\r\n\r\nconst Login = ({ setIsLoading, setIsLoggedIn, isLoggedIn}) => {\r\n  if(isLoggedIn) \r\n    return (<div className=\"auth-component-main-container\">You're logged in!</div>)\r\n  \r\n  const [username, setUserName] = useState(\"\"); \r\n  const [password, setPassword] = useState(\"\"); \r\n  const [failed, setFailed]  = useState(false);\r\n\r\n  return (\r\n    <div className=\"auth-component-main-container\">\r\n      <form\r\n        id=\"login\"\r\n        onSubmit={async (event) => {\r\n          event.preventDefault();\r\n          setIsLoading(true);\r\n\r\n          try {\r\n            const results = await loginUser(username, password)\r\n            if(results.user !== undefined) {\r\n              storeToken(results.token)\r\n              setIsLoggedIn(true)\r\n              setFailed(false)\r\n            }\r\n            else {//error message + clear text fields\r\n              console.log(\"login error: \", results.message)\r\n            }\r\n            \r\n            setUserName('')\r\n            setPassword('')\r\n\r\n          } catch (err) {\r\n            console.log(err);\r\n            setFailed(true)\r\n            setUserName(\"\")\r\n            setPassword(\"\")\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        }}\r\n      >\r\n        <fieldset className=\"auth-component-input\">\r\n          <label htmlFor=\"username\">User Name</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"enter username\"\r\n            value={username}\r\n            onChange={(event) => {\r\n              setUserName(event.target.value);\r\n            }}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className=\"auth-component-input\">\r\n          <label htmlFor=\"password\">User Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"enter password\"\r\n            value={password}\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n          />\r\n        </fieldset>\r\n        {failed ? <div className=\"auth-component-main-container\">Login failed. Username or password incorrect</div> : null }\r\n        <button>Login</button> \r\n      </form>\r\n      <NavLink to=\"/register\"> \r\n          Don't have an account? Click here. \r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport { allActivities } from \"../api\";\r\n\r\nconst Home = () => {\r\n  const [activities, setActivities] = useState([]);\r\n  useEffect(() => {\r\n    allActivities().then((res) => {\r\n      setActivities(res);\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <ul>\r\n        {activities.map((activity) => (\r\n          <li key={activity.id}>{activity.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\nimport { addActivity, allActivities } from \"../api\";\n\nconst NewActivity = ({ activities, setActivities }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDestcription] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={async (event) => {\n        event.preventDefault();\n        try {\n          const activityList = await allActivities();\n          for (let i = 0; i < activityList.length; i++) {\n            let act = activityList[i];\n            if (act[\"name\"] === name) {\n              throw new Error(\"Activity Already Exists\");\n            }\n          }\n\n          const newActivity = await addActivity(name, description);\n          const newActivityList = [...activities, newActivity];\n          setActivities(newActivityList);\n        } catch (error) {\n          alert(error);\n        }\n      }}\n    >\n      <h3>Create a New Activity!</h3>\n\n      <fieldset className=\"auth-component-input\">\n        <label htmlFor=\"name\">Name Your Activity! </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"  Activity\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </fieldset>\n\n      <fieldset className=\"auth-component-input\">\n        <label htmlFor=\"description\">Tell Us About You Activity!</label>\n        <input\n          id=\"description\"\n          type=\"text\"\n          placeholder=\"  Description\"\n          value={description}\n          onChange={(event) => {\n            setDestcription(event.target.value);\n          }}\n        />\n      </fieldset>\n      <button type=\"submit\">SUBMIT</button>\n    </form>\n  );\n};\n\nexport default NewActivity;\n","import React, { useState, useEffect } from \"react\";\n\nimport {allActivities} from \"../api\";\nimport NewActivity from \"./NewActivityForm\"\n\nconst Activities = ({isLoggedIn}) => {\n    const [activities, setActivities] = useState([]);\n    useEffect(() => {\n      allActivities().then((res) => {\n        setActivities(res);\n      });\n    }, []);\n    return (\n      <div>\n          <h1>\n              Activities\n          </h1>\n         \n           {isLoggedIn ? < NewActivity activities = {activities} setActivities = {setActivities}/>: null}\n        <ul>\n          {activities.map((activity) => (\n            <li key={activity.id}>{activity.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n\nexport default Activities\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Home, Navbar, Register, Login, Activities } from \"./components\";\r\n\r\nconst App = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n    <div id=\"App\">\r\n      <h1>Fitness World</h1>\r\n      <Navbar setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} />\r\n      <Switch>\r\n        <Route path=\"/register\">\r\n          <Register\r\n            isLoggedIn={isLoggedIn}\r\n            setIsLoading={setIsLoading}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n          />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login\r\n            setIsLoading={setIsLoading}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/Activities\">\r\n          <Activities isLoggedIn={isLoggedIn} />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}